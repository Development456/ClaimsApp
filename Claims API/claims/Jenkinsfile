Jenkins file
pipeline {
  agent {
        node {
            label 'docker'
        }
    }
    options {
        timestamps()
    }

    environment {


    }
    stages {
       stage('Clone repository') {
                      steps {
                          script{
                          checkout scm
                          }
                      }
                  }
       stages {
           stage('Build') {
                agent {
                    docker {

                     reuseNode true
                     image 'maven:3.8.5-jdk-17'
                      }
                     }
       steps {

                 withMaven(options: [findbugsPublisher(), junitPublisher(ignoreAttachments: false)]) {
                    sh 'mvn clean findbugs:findbugs package'
                 }
             }
             post {
                 success {

             archiveArtifacts(artifacts: '**/target/*.jar', allowEmptyArchive: true)
            }
            }
        }



       stage('Build and Publish Image') {
          when {
                branch 'Praneetha_changes'  //only run these steps on the develop branch
            }


             steps {

               sh """
          docker build -t ${IMAGE} .
           docker tag ${IMAGE} ${IMAGE}:${VERSION}
           docker push ${IMAGE}:${VERSION}

      """
      }
          }
      }
  }
 //            stage('deploy'){
//           }
// //
